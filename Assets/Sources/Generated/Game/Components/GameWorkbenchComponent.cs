//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity workbenchEntity { get { return GetGroup(GameMatcher.Workbench).GetSingleEntity(); } }
    public WorkbenchComponent workbench { get { return workbenchEntity.workbench; } }
    public bool hasWorkbench { get { return workbenchEntity != null; } }

    public GameEntity SetWorkbench(Workbench newValue) {
        if (hasWorkbench) {
            throw new Entitas.EntitasException("Could not set Workbench!\n" + this + " already has an entity with WorkbenchComponent!",
                "You should check if the context already has a workbenchEntity before setting it or use context.ReplaceWorkbench().");
        }
        var entity = CreateEntity();
        entity.AddWorkbench(newValue);
        return entity;
    }

    public void ReplaceWorkbench(Workbench newValue) {
        var entity = workbenchEntity;
        if (entity == null) {
            entity = SetWorkbench(newValue);
        } else {
            entity.ReplaceWorkbench(newValue);
        }
    }

    public void RemoveWorkbench() {
        workbenchEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WorkbenchComponent workbench { get { return (WorkbenchComponent)GetComponent(GameComponentsLookup.Workbench); } }
    public bool hasWorkbench { get { return HasComponent(GameComponentsLookup.Workbench); } }

    public void AddWorkbench(Workbench newValue) {
        var index = GameComponentsLookup.Workbench;
        var component = CreateComponent<WorkbenchComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWorkbench(Workbench newValue) {
        var index = GameComponentsLookup.Workbench;
        var component = CreateComponent<WorkbenchComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWorkbench() {
        RemoveComponent(GameComponentsLookup.Workbench);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWorkbench;

    public static Entitas.IMatcher<GameEntity> Workbench {
        get {
            if (_matcherWorkbench == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Workbench);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWorkbench = matcher;
            }

            return _matcherWorkbench;
        }
    }
}
