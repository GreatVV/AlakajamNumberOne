//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity uIEntity { get { return GetGroup(GameMatcher.UI).GetSingleEntity(); } }
    public UIComponent uI { get { return uIEntity.uI; } }
    public bool hasUI { get { return uIEntity != null; } }

    public GameEntity SetUI(UI newValue) {
        if (hasUI) {
            throw new Entitas.EntitasException("Could not set UI!\n" + this + " already has an entity with UIComponent!",
                "You should check if the context already has a uIEntity before setting it or use context.ReplaceUI().");
        }
        var entity = CreateEntity();
        entity.AddUI(newValue);
        return entity;
    }

    public void ReplaceUI(UI newValue) {
        var entity = uIEntity;
        if (entity == null) {
            entity = SetUI(newValue);
        } else {
            entity.ReplaceUI(newValue);
        }
    }

    public void RemoveUI() {
        uIEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public UIComponent uI { get { return (UIComponent)GetComponent(GameComponentsLookup.UI); } }
    public bool hasUI { get { return HasComponent(GameComponentsLookup.UI); } }

    public void AddUI(UI newValue) {
        var index = GameComponentsLookup.UI;
        var component = CreateComponent<UIComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUI(UI newValue) {
        var index = GameComponentsLookup.UI;
        var component = CreateComponent<UIComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUI() {
        RemoveComponent(GameComponentsLookup.UI);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUI;

    public static Entitas.IMatcher<GameEntity> UI {
        get {
            if (_matcherUI == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UI);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUI = matcher;
            }

            return _matcherUI;
        }
    }
}
