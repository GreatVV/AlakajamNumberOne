//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity ingredientViewFactoryEntity { get { return GetGroup(GameMatcher.IngredientViewFactory).GetSingleEntity(); } }
    public IngredientViewFactoryComponent ingredientViewFactory { get { return ingredientViewFactoryEntity.ingredientViewFactory; } }
    public bool hasIngredientViewFactory { get { return ingredientViewFactoryEntity != null; } }

    public GameEntity SetIngredientViewFactory(IngredientViewFactory newValue) {
        if (hasIngredientViewFactory) {
            throw new Entitas.EntitasException("Could not set IngredientViewFactory!\n" + this + " already has an entity with IngredientViewFactoryComponent!",
                "You should check if the context already has a ingredientViewFactoryEntity before setting it or use context.ReplaceIngredientViewFactory().");
        }
        var entity = CreateEntity();
        entity.AddIngredientViewFactory(newValue);
        return entity;
    }

    public void ReplaceIngredientViewFactory(IngredientViewFactory newValue) {
        var entity = ingredientViewFactoryEntity;
        if (entity == null) {
            entity = SetIngredientViewFactory(newValue);
        } else {
            entity.ReplaceIngredientViewFactory(newValue);
        }
    }

    public void RemoveIngredientViewFactory() {
        ingredientViewFactoryEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public IngredientViewFactoryComponent ingredientViewFactory { get { return (IngredientViewFactoryComponent)GetComponent(GameComponentsLookup.IngredientViewFactory); } }
    public bool hasIngredientViewFactory { get { return HasComponent(GameComponentsLookup.IngredientViewFactory); } }

    public void AddIngredientViewFactory(IngredientViewFactory newValue) {
        var index = GameComponentsLookup.IngredientViewFactory;
        var component = CreateComponent<IngredientViewFactoryComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceIngredientViewFactory(IngredientViewFactory newValue) {
        var index = GameComponentsLookup.IngredientViewFactory;
        var component = CreateComponent<IngredientViewFactoryComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveIngredientViewFactory() {
        RemoveComponent(GameComponentsLookup.IngredientViewFactory);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIngredientViewFactory;

    public static Entitas.IMatcher<GameEntity> IngredientViewFactory {
        get {
            if (_matcherIngredientViewFactory == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.IngredientViewFactory);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIngredientViewFactory = matcher;
            }

            return _matcherIngredientViewFactory;
        }
    }
}
