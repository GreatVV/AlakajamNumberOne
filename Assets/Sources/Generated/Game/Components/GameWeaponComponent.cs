//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WeaponComponent weapon { get { return (WeaponComponent)GetComponent(GameComponentsLookup.Weapon); } }
    public bool hasWeapon { get { return HasComponent(GameComponentsLookup.Weapon); } }

    public void AddWeapon(WeaponType newWeaponType) {
        var index = GameComponentsLookup.Weapon;
        var component = CreateComponent<WeaponComponent>(index);
        component.WeaponType = newWeaponType;
        AddComponent(index, component);
    }

    public void ReplaceWeapon(WeaponType newWeaponType) {
        var index = GameComponentsLookup.Weapon;
        var component = CreateComponent<WeaponComponent>(index);
        component.WeaponType = newWeaponType;
        ReplaceComponent(index, component);
    }

    public void RemoveWeapon() {
        RemoveComponent(GameComponentsLookup.Weapon);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeapon;

    public static Entitas.IMatcher<GameEntity> Weapon {
        get {
            if (_matcherWeapon == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Weapon);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeapon = matcher;
            }

            return _matcherWeapon;
        }
    }
}
