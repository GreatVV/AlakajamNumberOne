//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity iconCacheEntity { get { return GetGroup(GameMatcher.IconCache).GetSingleEntity(); } }
    public IconCacheComponent iconCache { get { return iconCacheEntity.iconCache; } }
    public bool hasIconCache { get { return iconCacheEntity != null; } }

    public GameEntity SetIconCache(System.Collections.Generic.Dictionary<long, InventoryIcon> newValue, System.Collections.Generic.Dictionary<string, InventoryIcon> newProjectiles) {
        if (hasIconCache) {
            throw new Entitas.EntitasException("Could not set IconCache!\n" + this + " already has an entity with IconCacheComponent!",
                "You should check if the context already has a iconCacheEntity before setting it or use context.ReplaceIconCache().");
        }
        var entity = CreateEntity();
        entity.AddIconCache(newValue, newProjectiles);
        return entity;
    }

    public void ReplaceIconCache(System.Collections.Generic.Dictionary<long, InventoryIcon> newValue, System.Collections.Generic.Dictionary<string, InventoryIcon> newProjectiles) {
        var entity = iconCacheEntity;
        if (entity == null) {
            entity = SetIconCache(newValue, newProjectiles);
        } else {
            entity.ReplaceIconCache(newValue, newProjectiles);
        }
    }

    public void RemoveIconCache() {
        iconCacheEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public IconCacheComponent iconCache { get { return (IconCacheComponent)GetComponent(GameComponentsLookup.IconCache); } }
    public bool hasIconCache { get { return HasComponent(GameComponentsLookup.IconCache); } }

    public void AddIconCache(System.Collections.Generic.Dictionary<long, InventoryIcon> newValue, System.Collections.Generic.Dictionary<string, InventoryIcon> newProjectiles) {
        var index = GameComponentsLookup.IconCache;
        var component = CreateComponent<IconCacheComponent>(index);
        component.value = newValue;
        component.Projectiles = newProjectiles;
        AddComponent(index, component);
    }

    public void ReplaceIconCache(System.Collections.Generic.Dictionary<long, InventoryIcon> newValue, System.Collections.Generic.Dictionary<string, InventoryIcon> newProjectiles) {
        var index = GameComponentsLookup.IconCache;
        var component = CreateComponent<IconCacheComponent>(index);
        component.value = newValue;
        component.Projectiles = newProjectiles;
        ReplaceComponent(index, component);
    }

    public void RemoveIconCache() {
        RemoveComponent(GameComponentsLookup.IconCache);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIconCache;

    public static Entitas.IMatcher<GameEntity> IconCache {
        get {
            if (_matcherIconCache == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.IconCache);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIconCache = matcher;
            }

            return _matcherIconCache;
        }
    }
}
