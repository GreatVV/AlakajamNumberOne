//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CurrentProjectileComponent currentProjectile { get { return (CurrentProjectileComponent)GetComponent(GameComponentsLookup.CurrentProjectile); } }
    public bool hasCurrentProjectile { get { return HasComponent(GameComponentsLookup.CurrentProjectile); } }

    public void AddCurrentProjectile(GameEntity newValue) {
        var index = GameComponentsLookup.CurrentProjectile;
        var component = CreateComponent<CurrentProjectileComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentProjectile(GameEntity newValue) {
        var index = GameComponentsLookup.CurrentProjectile;
        var component = CreateComponent<CurrentProjectileComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentProjectile() {
        RemoveComponent(GameComponentsLookup.CurrentProjectile);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentProjectile;

    public static Entitas.IMatcher<GameEntity> CurrentProjectile {
        get {
            if (_matcherCurrentProjectile == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentProjectile);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentProjectile = matcher;
            }

            return _matcherCurrentProjectile;
        }
    }
}
